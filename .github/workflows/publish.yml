name: Publish to Maven Central

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v0.1.0
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Configure Git user
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Extract version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Releasing version: $VERSION"

    - name: Update version in POM files
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.VERSION }} -DgenerateBackupPoms=false

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Create Maven settings.xml
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml << EOF
        <settings>
          <servers>
            <server>
              <id>central</id>
              <username>${{ secrets.CENTRAL_TOKEN }}</username>
              <password>${{ secrets.CENTRAL_PASSWORD }}</password>
            </server>
          </servers>
          <profiles>
            <profile>
              <id>central</id>
              <activation>
                <activeByDefault>true</activeByDefault>
              </activation>
              <properties>
                <gpg.executable>gpg</gpg.executable>
                <gpg.passphrase>${{ secrets.GPG_PASSPHRASE }}</gpg.passphrase>
              </properties>
            </profile>
          </profiles>
        </settings>
        EOF

    - name: Run tests
      run: mvn clean test

    - name: Test integration example
      run: |
        cd integration-example/spring-boot-demo
        mvn clean compile

    - name: Verify generated code
      run: |
        cd integration-example/spring-boot-demo
        # Check if generated files exist
        test -f target/generated-sources/eventor/UserRegisteredEvent.java
        test -f target/generated-sources/eventor/UserEventProducer.java
        test -f target/generated-sources/eventor/UserEventListener.java
        echo "âœ… All generated files found!"

    - name: Deploy to Maven Central
      run: mvn clean deploy -P release --no-transfer-progress
